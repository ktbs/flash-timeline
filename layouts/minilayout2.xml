<?xml version="1.0" encoding="utf-8" ?>
<root>
	<!-- A second version of mini layout. This one contains an ObselsSelectors section -->
	
	<!-- The ObselsSelectors section defines selectors that are used to set a 'stylename' to obselSkins which match.
		This stylename can be used as obselSkins selectors in the CSS file 
		For example : 
			timeline|ObselSkin.Message
			{
			...
			}
		
		The 'selector' attribute is the class name of a ISelector implementaion.
		The 'selectorParams' is the serialisation of parameters needed to initialize the selector class in the order defined by the getParameters/setParameters functions 	
		
		The obsels that don't match any selectors will be rendered with the default ObselSkin.
	-->		
	<obselsSelectors>
		<obselSelector id='Message'  	  selector="SelectorRegexp" selectorParams="type,Message" />
		<obselSelector id='Document'  	  selector="SelectorRegexp" selectorParams="type,Document" />	
		<obselSelector id='Instructions'  selector="SelectorRegexp" selectorParams="type,Instructions" />
		<obselSelector id='Marker'  	  selector="SelectorRegexp" selectorParams="type,Marker" />
		<obselSelector id='Keyword'  	  selector="SelectorRegexp" selectorParams="type,Keyword" />
		<obselSelector id='Comment'  	  selector="SelectorRegexp" selectorParams="type,omment" />
	</obselsSelectors>
	
	<!-- the layout definition -->
	<layout>
		<!-- Default and only traceLineGroup definition. Each Trace will use this definition -->
		<tlg > 			
			<!-- One traceLine with no selector ( every obsel will match ) -->
			<tl />
			
			<!-- there is no traceLine tagged with the 'preview' attribute. Then, this Tracelinegroup preview (in the zoomContext part) is a traceline that renders the whole trace -->
		</tlg > 				
	</layout>
</root>			
