<?xml version="1.0" encoding="utf-8"?>
<!---
	This is a tooltip like component that shows a time label ; it is used in the Cursor class or appears when cursor is over a TimeRuler.
	<p>(this is not a true toolTip)</p>
	@see Cursor
-->
<mx:Panel xmlns:fx="http://ns.adobe.com/mxml/2009"
				 xmlns:s="library://ns.adobe.com/flex/spark"
				 xmlns:timeline="com.ithaca.timeline.*"
				 xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:skins="com.ithaca.timeline.skins.*" 	
    implements="mx.core.IToolTip"
	borderSkin="{null}"
    horizontalAlign="center"
	borderColor="0"
	dropShadowVisible="false">	
	
	<fx:Metadata>
		[Style(name = "showTopArrow", type = "Boolean", inherit = "no")]
		[Style(name = "showBottomArrow", type = "Boolean", inherit = "no")]	
	</fx:Metadata>

    <fx:Script><![CDATA[
        [Bindable]
        public var bodyText:String = "";
		
		 [Bindable]
        public var showTopArrow:Boolean = true;
		 [Bindable]
        public var showBottomArrow:Boolean = true;

        //  Implement required methods of the IToolTip interface; these
        //  methods are not used in this example, though.
        public var _text:String;

        [Bindable]
		public function get text():String
		{
            return _text;
        }
		
        public function set text( value : String ) : void
		{
			bodyText = _text = value;
        }
		
			override public function styleChanged(styleProp:String):void
			{
				super.styleChanged(styleProp);
		
				if (!styleProp || styleProp=="showTopArrow" )
				{
					if ( getStyle("showTopArrow") != null )
						showTopArrow = getStyle("showTopArrow") ;
					invalidateDisplayList();
				}
				
				if (!styleProp || styleProp=="showBottomArrow" )
				{
					if ( getStyle("showBottomArrow") !=null )
						showBottomArrow = getStyle("showBottomArrow") ;
					invalidateDisplayList();
				}
			}
		
		
		
    ]]></fx:Script>

	<s:BorderContainer id="body" cornerRadius="5" height="20" minHeight="5" minWidth="5" borderWeight="2" horizontalCenter="center" backgroundColor="{getStyle('backgroundColor')}" borderColor="{getStyle('borderColor')}" percentWidth="100" >
		<mx:Label text="{bodyText}"  percentWidth="100" fontSize="11" fontWeight="bold" />
		<s:Path id="topArrow" x="{body.width/2-8}" y="0" data="l 8 -8  l 8 8" visible="{showTopArrow}">			
			<s:stroke >
				<s:SolidColorStroke color="{getStyle('borderColor')}" weight="2"/>
			</s:stroke>		
			<s:fill>
				<s:SolidColor color="{getStyle('backgroundColor')}" />
			</s:fill>
		</s:Path>
		<s:Path id="bottomArrow" x="{body.width/2-8}" y="{body.height-4}" data="l 8 8  l 8 -8" visible="{showBottomArrow}">
			<s:stroke >
				<s:SolidColorStroke color="{getStyle('borderColor')}" weight="2"/>
			</s:stroke>
			<s:fill>
				<s:SolidColor color="{getStyle('backgroundColor')}" />
			</s:fill>
		</s:Path>
	</s:BorderContainer>
	
	

</mx:Panel>