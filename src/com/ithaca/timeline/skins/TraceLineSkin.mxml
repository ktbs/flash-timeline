<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" 
				 xmlns:s="library://ns.adobe.com/flex/spark" 
				 xmlns:tl="com.ithaca.timeline.*"
				 xmlns:mx="library://ns.adobe.com/flex/mx" 
				 xmlns:Skins="com.ithaca.timeline.Skins.*" 
				 creationComplete="creationCompleteHandler(event)"
				 width="100%" height="100%">
	<fx:Declarations>
		<!-- Placer ici les éléments non visuels (services et objets de valeur, par exemple). -->
	</fx:Declarations>
	
	 <fx:Metadata>[HostComponent("com.ithaca.timeline.TraceLine")]</fx:Metadata>
	 
	  <fx:Script>
        <![CDATA[         
			import com.ithaca.timeline.LayoutNode;
			import com.ithaca.timeline.SimpleObselsRenderer;
			import com.ithaca.timeline.TraceLineGroup;
			import com.ithaca.timeline.Divider;
			import com.ithaca.timeline.Timeline;
			import com.ithaca.timeline.ZoomContext;
			import com.ithaca.timeline.events.TimelineEvent;
			import com.ithaca.traces.Obsel;
			import mx.events.FlexEvent;
			import flash.display.DisplayObject;
			import flash.display.Graphics;
			import flash.display.Shape;
			import flash.display.Sprite;
			import mx.core.UIComponent; 
			import flash.events.Event;
			import mx.collections.ArrayCollection;
			import mx.events.CollectionEvent;

			[Bindable]
			public var forme:Shape = new Shape();	
			
			[Bindable]
			public var displayLevel:Number = 0;	
			
			[Bindable]
			public var dividerX:Divider;	
			
			[Bindable]
			public var timeline:Timeline;
			
			[Bindable]
			public var simpleObselsRenderer : SimpleObselsRenderer;
						
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				traceLineTitle.text 				  = hostComponent.title;		
			
				simpleObselsRenderer = new SimpleObselsRenderer( hostComponent._timeline.zoomContext.cursorRange );
				simpleObselsRenderer.percentHeight 		= 100;
				simpleObselsRenderer.percentWidth  		= 100;			
				simpleObselsRenderer.obselsCollection 	= hostComponent._obsels;
				rendererGroup.addElement( simpleObselsRenderer );
				hostComponent._timeline.zoomContext.addEventListener( TimelineEvent.TIMERANGES_CHANGE, simpleObselsRenderer.onTimerangeChange );
				
				dividerX 							  = hostComponent._timeline.divider;
				timeline							  = hostComponent._timeline;
				onChildrenChange(null);			
				updateDisplayLevel( );					
			}
			
			protected function updateDisplayLevel(  ) : void
			{	
				var node :LayoutNode = hostComponent.node;
				displayLevel = -1;
				while (node && !(node.value is TraceLineGroup))
				{
					node = node.parent;				
					displayLevel++;
				}							
				if (!node)
					displayLevel = 0;
			}
			
			protected function onSelect() : void
			{					
				parentApplication.dg_label.text = hostComponent.title + " : " + hostComponent._obsels.length + " obsels";
				parentApplication.obselList_dg.dataProvider = hostComponent._obsels;								
			}
			
			protected function onChildrenChange( event : Event ) : void
			{								
				OpenButton.visible =  (hostComponent.node.children.length > 0 );
			}
			
			protected function onOpenButtonClick():void
			{				
				if (currentState == "normal")
					setCurrentState("open");
				else 
					setCurrentState("normal");
			}
        ]]>        
    </fx:Script>
	
	<s:states>
        <s:State name="normal" />
        <s:State name="open" />
		<s:State name="disabled" />
    </s:states>
	
	<s:VGroup width="100%" height="100%" gap="5">
		<s:Group width="100%" height="20"> 				
			<s:HGroup id="titleGroup"   height="100%" gap="6">
				<mx:Spacer width="{displayLevel*15}" />
				<mx:Image id="OpenButton" source="@Embed(source='../images/iconPlus.png')"  height="100%" source.open="@Embed(source='../images/iconMinus.png')" click="onOpenButtonClick()" /> 		
				<s:Label id="traceLineTitle" baselineShift="-4" height="100%" fontSize="11" />
			</s:HGroup>	
			<s:Group id="rendererGroup" click="onSelect()" x="{timeline.titleGroupWidth+ dividerX.skin.x}" width="100%" height="100%"  minHeight="1"/>				
		</s:Group>
		<s:VGroup id="contentGroup" includeIn="open" width="100%" gap="5" />
	</s:VGroup>
	
</s:Skin>
