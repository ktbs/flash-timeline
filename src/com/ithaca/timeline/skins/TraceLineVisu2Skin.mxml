<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:tl="com.ithaca.timeline.*"
		xmlns:mx="library://ns.adobe.com/flex/mx"
		xmlns:skins="com.ithaca.timeline.skins.*"
		creationComplete="creationCompleteHandler(event)"
		width="100%"
		height="100%">

	<fx:Metadata>
		[HostComponent("com.ithaca.timeline.TraceLine")]
		[Style(name = "rendererHeight", type = "Number", inherit = "no")]	
		[Style(name = "rendererGap", type = "Number", inherit = "no")]	
	</fx:Metadata>

	<fx:Script>
		<![CDATA[
			import com.ithaca.timeline.events.TimelineEvent;
			import com.ithaca.timeline.LayoutNode;
			import com.ithaca.timeline.ObselsRenderer;
			import com.ithaca.timeline.SelectorRegexp;
			import com.ithaca.timeline.Stylesheet;
			import com.ithaca.timeline.Timeline;
			import com.ithaca.timeline.TraceLine;
			import com.ithaca.timeline.TraceLineGroup;
			import com.ithaca.timeline.ZoomContext;
			import com.ithaca.traces.Obsel;
			import flash.display.DisplayObject;
			import flash.display.Graphics;
			import flash.display.Shape;
			import flash.display.Sprite;
			import flash.events.Event;
			import flash.events.MouseEvent;
			import flash.geom.Point;
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.Menu;
			import mx.core.UIComponent;
			import mx.events.CollectionEvent;
			import mx.events.FlexEvent;
			import mx.events.MenuEvent;
			import mx.managers.PopUpManager;
			
			[Bindable]
			public var forme:Shape = new Shape();
			
			[Bindable]
			public var displayLevel:Number = 0;
			[Bindable]
			public var timeline:Timeline;
			
			[Bindable]
			public var obselsRenderer:ObselsRenderer;
			
			[Bindable]
			public var renderersSidePadding:Number = 0;
			
			private var editMenu:Menu;
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{		
				renderersSidePadding = Stylesheet.renderersSidePadding;
				hostComponent.percentWidth 		= 100;
				obselsRenderer 					= new ObselsRenderer( hostComponent._timeline.zoomContext.cursorRange, hostComponent );
				obselsRenderer.height 			= hostComponent.getStyle("rendererHeight") as Number;
				obselsRenderer.percentWidth 	= 100;
				obselsRenderer.right			= obselsRenderer.left			= renderersSidePadding;
				obselsRenderer.obselsCollection = hostComponent._obsels;
				obselsRenderer.addEventListener(MouseEvent.CLICK, onSelect);
				obselsRenderer.styleName = hostComponent.styleName;		
				rendererGroup.height 			= obselsRenderer.height + hostComponent.getStyle("rendererGap") as Number;
				rendererGroup.addElement( obselsRenderer );
				timeline = hostComponent._timeline;
			}
			
			protected function onSelect(event:Event):void
			{
				parentApplication.dg_label.text = hostComponent.title + " : " + hostComponent._obsels.length + " obsels";
				parentApplication.obselList_dg.dataProvider = hostComponent._obsels;
			}
			
			override public function styleChanged(styleProp:String):void
			{
				super.styleChanged(styleProp);

				if ( obselsRenderer )
				{
					obselsRenderer.height 	= hostComponent.getStyle("rendererHeight") as Number;
					rendererGroup.height 	= obselsRenderer.height + hostComponent.getStyle("rendererGap") as Number;
				}
				
				if ( hostComponent.titleComponent )					
				{
					if ( styleProp )
						hostComponent.titleComponent.setStyle( styleProp, getStyle( styleProp ));				
					else
					{
						hostComponent.titleComponent.setStyle( 'title' , getStyle( 'title' ));	
						hostComponent.titleComponent.setStyle( 'rendererHeight' , getStyle( 'rendererHeight' ));
						hostComponent.titleComponent.setStyle( 'rendererGap' , getStyle( 'rendererGap' ));						
					}
				}
					
				invalidateDisplayList();
			}
			
		]]>
	</fx:Script>

	<s:states>
		<s:State name="normal" />
		<s:State name="open" />
		<s:State name="disabled" />
	</s:states>

	<s:VGroup width="100%" gap="0">
		<s:Group id="rendererGroup"  width="100%" />
		<s:VGroup id="contentGroup"  includeIn="open"   width="100%" gap="0" />
	</s:VGroup>
</s:Skin>
