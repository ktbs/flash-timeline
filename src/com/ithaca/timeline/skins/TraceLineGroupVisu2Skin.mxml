<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" 
				 xmlns:s="library://ns.adobe.com/flex/spark" 
				 xmlns:tl="com.ithaca.timeline.*" 
				 xmlns:mx="library://ns.adobe.com/flex/mx" 
				 xmlns:skins="com.ithaca.timeline.skins.*" 
				 creationComplete="creationCompleteHandler(event)"
				 width="100%" height="100%">
	<fx:Declarations>
		<!-- Placer ici les éléments non visuels (services et objets de valeur, par exemple). -->
	</fx:Declarations>
	
	<fx:Metadata>[HostComponent("com.ithaca.timeline.TraceLineGroup")]
	
		[Style(name = "fillColors", type = "Array", format = "Color", inherit = "no")]
		[Style(name = "headerHeight", type = "Number", inherit = "no")]
	</fx:Metadata>
	 
	<fx:Script>
        <![CDATA[         
			import com.ithaca.timeline.Timeline;
			import com.ithaca.timeline.TraceLine;
			import mx.events.FlexEvent;
			import com.ithaca.timeline.Stylesheet;
			import com.ithaca.timeline.ObselsRenderer;
				import mx.graphics.SolidColor;
			
			[Bindable]
			public var backgroundColor : uint;

			[Bindable]
			public var obselsRenderer:ObselsRenderer;
			
			[Bindable]
			public var renderersSidePadding:Number = 0;
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				hostComponent.percentWidth	= 100;
				backgroundColor 			= Stylesheet.getTracelineGroupColor( hostComponent );
				if ( hostComponent.backgroundTraceLine )
				{
					hostComponent.backgroundTraceLine.percentHeight = 100;
					backgroundGroup.addElement( hostComponent.backgroundTraceLine );					
				}
				styleChanged(null);
			}
			
			override public function styleChanged(styleProp:String):void
			{
				super.styleChanged(styleProp)			

				switch(styleProp)
				{
					case "headerHeight": 
						if ( contentGroup )
							contentGroup.top 	= getStyle("headerHeight");
						backgroundGroup.top 	= getStyle("headerHeight");
						invalidateDisplayList();
						break;
					case "bottom": 
						if ( contentGroup )
							contentGroup.bottom	= getStyle("bottom");
						backgroundGroup.bottom 	= getStyle("bottom");
						invalidateDisplayList();
						break;
					case "bgColor": 
						tlgContainer.backgroundFill = new SolidColor( getStyle("bgColor") )	;
						break;
				}
				
				if ( hostComponent.titleComponent )
					hostComponent.titleComponent.setStyle(styleProp, getStyle(styleProp));
					
				invalidateDisplayList();						
					
				if ( !styleProp )
				{
					if ( contentGroup)
					{
						contentGroup.top 	= getStyle("headerHeight");
						contentGroup.bottom	= getStyle("bottom");
					}
					backgroundColor		= getStyle("bgColor");
					if ( backgroundGroup )
					{
						backgroundGroup.bottom 	= getStyle("bottom");
						backgroundGroup.top 	= getStyle("headerHeight");
					}
					invalidateDisplayList();
				}
			}
			
        ]]>        
    </fx:Script>
	
	<s:states>
        <s:State name="normal" />
		<s:State name="disabled" />
    </s:states>
	
	<s:BorderContainer id="tlgContainer" height="100%" width="100%" minHeight="1" backgroundColor="{backgroundColor}" >
		<s:Group id="backgroundGroup" width="100%" height="100%" />
		<s:VGroup id="contentGroup"  width="100%" gap="0" />			
	</s:BorderContainer>
</s:Skin>
