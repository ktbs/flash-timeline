<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009"
                 xmlns:s="library://ns.adobe.com/flex/spark"
                 xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:skins="com.ithaca.timeline.skins.*"
                 creationComplete="creationCompleteHandler(event)">
    <fx:Declarations>
        <!-- Placer ici les éléments non visuels (services et objets de valeur, par exemple). -->
    </fx:Declarations>

    <fx:Metadata>[HostComponent("com.ithaca.timeline.ObselSkin")]</fx:Metadata>

    <fx:Script>
        <![CDATA[
            import com.ithaca.traces.Obsel;
            import com.ithaca.tales.Context;
            import com.ithaca.timeline.util.SkinUtil;
            import mx.events.PropertyChangeEvent;
            import flash.filters.BlurFilter;
            import flash.filters.ColorMatrixFilter;
            import flash.filters.GlowFilter;
            import flash.geom.ColorTransform;

            public var obsel: Obsel;

            protected function creationCompleteHandler(event: Event): void
            {
                obsel = hostComponent.obsel;
                obsel.addEventListener(PropertyChangeEvent.PROPERTY_CHANGE, onObselChange);
                hostComponent.dragArea = icon;
                // Update icon source and tooltip
                onObselChange();
            }

            override public function styleChanged(styleProp: String): void
            {
                super.styleChanged(styleProp);
                onObselChange();
            }

            protected function onObselChange(event: PropertyChangeEvent = null): void
            {
                var st: * = null;

                if (obsel == null)
                    return;

                st = SkinUtil.interpretStyle(obsel, hostComponent.getStyle("icon"));
                if (st)
                {
                    icon.source = st;
                    // Resize icon if it is obtained through a TALES expression.
                    if (st is String && st.indexOf('http') > -1)
                        icon.height = hostComponent.traceline.height;
                }

                st = SkinUtil.interpretStyle(obsel, hostComponent.getStyle("tooltip"));
                if (st)
                {
                    icon.toolTip = st;
                }

                if (hostComponent.getStyle("visible") == 'false')
                {
                    icon.visible = false;
                }
                else
                {
                    icon.visible = true;
                }
            }

        ]]>
    </fx:Script>

    <s:Image id="icon" />

</s:Skin>
